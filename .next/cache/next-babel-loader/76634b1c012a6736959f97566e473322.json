{"ast":null,"code":"import React, { useState } from \"react\";\nimport anime from \"animejs\";\n\nconst navbarAnimation = () => {\n  const navRef = React.useRef(null);\n  let {\n    0: animationPassed,\n    1: setIsPassed\n  } = useState(sessionStorage.getItem('animationPassed'));\n  React.useEffect(() => {\n    if (!sessionStorage.getItem('animationPassed')) {\n      navRef.current = anime.timeline({\n        loop: false\n      }).add({\n        targets: document.getElementById(\"nav-item\"),\n        translateY: [-15, 0],\n        opacity: [0, 1],\n        duration: 1500,\n        delay: (el, i) => i * 200 + 2100\n      }).add({\n        targets: document.getElementById(\"nav-logo\"),\n        translateY: [-15, 0],\n        opacity: [0, 1],\n        easing: 'easeOutExpo',\n        duration: 1500\n      });\n      setIsPassed(!animationPassed);\n      sessionStorage.setItem('animationPassed', animationPassed);\n    }\n  }, []);\n};\n\nexport default navbarAnimation;","map":{"version":3,"sources":["D:/trail.by/src/scripts/navbarAnimations.js"],"names":["React","useState","anime","navbarAnimation","navRef","useRef","animationPassed","setIsPassed","sessionStorage","getItem","useEffect","current","timeline","loop","add","targets","document","getElementById","translateY","opacity","duration","delay","el","i","easing","setItem"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAGA,MAAMC,eAAe,GAAG,MAAM;AAE1B,QAAMC,MAAM,GAAGJ,KAAK,CAACK,MAAN,CAAa,IAAb,CAAf;AACA,MAAI;AAAA,OAACC,eAAD;AAAA,OAAkBC;AAAlB,MAAiCN,QAAQ,CAACO,cAAc,CAACC,OAAf,CAAuB,iBAAvB,CAAD,CAA7C;AACAT,EAAAA,KAAK,CAACU,SAAN,CAAgB,MAAM;AAElB,QAAI,CAACF,cAAc,CAACC,OAAf,CAAuB,iBAAvB,CAAL,EAAgD;AAC5CL,MAAAA,MAAM,CAACO,OAAP,GACIT,KAAK,CAACU,QAAN,CAAe;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAf,EACKC,GADL,CACS;AACDC,QAAAA,OAAO,EAAEC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CADR;AAEDC,QAAAA,UAAU,EAAE,CAAC,CAAC,EAAF,EAAM,CAAN,CAFX;AAGDC,QAAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,CAHR;AAIDC,QAAAA,QAAQ,EAAE,IAJT;AAKDC,QAAAA,KAAK,EAAE,CAACC,EAAD,EAAKC,CAAL,KAAWA,CAAC,GAAG,GAAJ,GAAU;AAL3B,OADT,EAQKT,GARL,CAQS;AACDC,QAAAA,OAAO,EAAEC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CADR;AAEDC,QAAAA,UAAU,EAAE,CAAC,CAAC,EAAF,EAAM,CAAN,CAFX;AAGDC,QAAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,CAHR;AAIDK,QAAAA,MAAM,EAAE,aAJP;AAKDJ,QAAAA,QAAQ,EAAE;AALT,OART,CADJ;AAgBAb,MAAAA,WAAW,CAAC,CAACD,eAAF,CAAX;AACAE,MAAAA,cAAc,CAACiB,OAAf,CAAuB,iBAAvB,EAA0CnB,eAA1C;AACH;AACJ,GAtBD,EAsBG,EAtBH;AAuBH,CA3BD;;AA6BA,eAAeH,eAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport anime from \"animejs\";\r\n\r\n\r\nconst navbarAnimation = () => {\r\n\r\n    const navRef = React.useRef(null)\r\n    let [animationPassed, setIsPassed] = useState(sessionStorage.getItem('animationPassed'));\r\n    React.useEffect(() => {\r\n\r\n        if (!sessionStorage.getItem('animationPassed')) {\r\n            navRef.current =\r\n                anime.timeline({ loop: false })\r\n                    .add({\r\n                        targets: document.getElementById(\"nav-item\"),\r\n                        translateY: [-15, 0],\r\n                        opacity: [0, 1],\r\n                        duration: 1500,\r\n                        delay: (el, i) => i * 200 + 2100,\r\n                    })\r\n                    .add({\r\n                        targets: document.getElementById(\"nav-logo\"),\r\n                        translateY: [-15, 0],\r\n                        opacity: [0, 1],\r\n                        easing: 'easeOutExpo',\r\n                        duration: 1500,\r\n                    })\r\n            setIsPassed(!animationPassed)\r\n            sessionStorage.setItem('animationPassed', animationPassed)\r\n        }\r\n    }, [])\r\n}\r\n\r\nexport default navbarAnimation"]},"metadata":{},"sourceType":"module"}