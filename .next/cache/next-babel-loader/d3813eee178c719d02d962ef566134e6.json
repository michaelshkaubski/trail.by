{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport palettes from '../constants/colorPalettes';\n\nconst switchTheme = () => {\n  _s();\n\n  let {\n    0: paletteName,\n    1: setPaletteName\n  } = useState(!localStorage ? 'light' : localStorage.getItem('currentPalette'));\n  React.useEffect(() => {\n    localStorage.setItem('currentPalette', paletteName);\n  }, [paletteName]);\n\n  if (paletteName !== \"dark\" && paletteName !== \"light\") {\n    setPaletteName('light');\n  }\n\n  return [palettes[paletteName || \"light\"], () => setPaletteName(paletteName === \"light\" ? \"dark\" : \"light\")];\n};\n\n_s(switchTheme, \"KHVZZJxm3rdcwv0Iv5e41g3oUQs=\");\n\nexport default switchTheme;","map":{"version":3,"sources":["D:/trail.by/src/scripts/switchTheme.js"],"names":["React","useState","palettes","switchTheme","paletteName","setPaletteName","localStorage","getItem","useEffect","setItem"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,MAAI;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCJ,QAAQ,CAAC,CAACK,YAAD,GAAgB,OAAhB,GAA0BA,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAA3B,CAA5C;AACAP,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AAClBF,IAAAA,YAAY,CAACG,OAAb,CAAqB,gBAArB,EAAuCL,WAAvC;AACH,GAFD,EAEG,CAACA,WAAD,CAFH;;AAGA,MAAIA,WAAW,KAAK,MAAhB,IAA0BA,WAAW,KAAK,OAA9C,EAAuD;AACnDC,IAAAA,cAAc,CAAC,OAAD,CAAd;AACH;;AACD,SAAO,CACHH,QAAQ,CAACE,WAAW,IAAI,OAAhB,CADL,EAEH,MAAMC,cAAc,CAACD,WAAW,KAAK,OAAhB,GAA0B,MAA1B,GAAmC,OAApC,CAFjB,CAAP;AAKH,CAbD;;GAAMD,W;;AAeN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport palettes from '../constants/colorPalettes'\r\n\r\n\r\nconst switchTheme = () => {\r\n    let [paletteName, setPaletteName] = useState(!localStorage ? 'light' : localStorage.getItem('currentPalette'));\r\n    React.useEffect(() => {\r\n        localStorage.setItem('currentPalette', paletteName)\r\n    }, [paletteName])\r\n    if (paletteName !== \"dark\" && paletteName !== \"light\") {\r\n        setPaletteName('light')\r\n    }\r\n    return [\r\n        palettes[paletteName || \"light\"],\r\n        () => setPaletteName(paletteName === \"light\" ? \"dark\" : \"light\"),\r\n    ];\r\n\r\n}\r\n\r\nexport default switchTheme"]},"metadata":{},"sourceType":"module"}